"use strict";(self.webpackChunkba_getter=self.webpackChunkba_getter||[]).push([[621],{1659:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>l,frontMatter:()=>o,metadata:()=>a,toc:()=>u});var n=r(5893),s=r(1151);const o={},i="Import NuGet.Server packages",a={id:"Import/nugetserver",title:"Import NuGet.Server packages",description:"NuGet.Server is a lightweight standalone NuGet server. It is strongly recommended that you upgrade to BaGetter if you use NuGet.Server. Feel free to open a GitHub issue if you need help migrating.",source:"@site/docs/Import/nugetserver.md",sourceDirName:"Import",slug:"/Import/nugetserver",permalink:"/docs/Import/nugetserver",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Import/nugetserver.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Import nuget.org packages",permalink:"/docs/Import/nugetorg"},next:{title:"Use Alibaba (Aliyun) Object Storage Service",permalink:"/docs/Installation/aliyun"}},c={},u=[{value:"Steps",id:"steps",level:2}];function p(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"import-nugetserver-packages",children:"Import NuGet.Server packages"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.a,{href:"https://github.com/NuGet/NuGet.Server",children:"NuGet.Server"})," is a lightweight standalone NuGet server. It is strongly recommended that you upgrade to BaGetter if you use NuGet.Server. Feel free to open a ",(0,n.jsx)(t.a,{href:"https://github.com/bagetter/BaGetter/issues",children:"GitHub issue"})," if you need help migrating."]}),"\n",(0,n.jsxs)(t.p,{children:["!!! info\nPlease refer to the ",(0,n.jsx)(t.a,{href:"/docs/vs/nugetserver",children:"BaGetter vs NuGet.Server"})," page for reasons to upgrade to BaGetter."]}),"\n",(0,n.jsx)(t.h2,{id:"steps",children:"Steps"}),"\n",(0,n.jsxs)(t.p,{children:["Make sure that you've installed ",(0,n.jsx)(t.a,{href:"https://www.nuget.org/downloads",children:"nuget.exe"}),". In PowerShell, run:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ps1",children:'$source = "<NuGet.Server package source>"\n$destination = "<BaGetter package source>"\n'})}),"\n",(0,n.jsxs)(t.p,{children:["If you've ",(0,n.jsx)(t.a,{href:"https://bagetter.com/docs/configuration/#requiring-an-api-key",children:"configured BaGetter to require an API Key"}),", set it using ",(0,n.jsxs)(t.a,{href:"https://docs.microsoft.com/en-us/nuget/reference/cli-reference/cli-ref-setapikey",children:["the ",(0,n.jsx)(t.code,{children:"setapikey"})," command"]}),":"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ps1",children:'& nuget.exe setapikey "MY-API-KEY" -Source $destination\n'})}),"\n",(0,n.jsx)(t.p,{children:"Now run the following PowerShell script:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ps1",children:'if (!(Test-Path "Web.config")) {\n  throw "Please run this script in the same directory as NuGet.Server\'s Web.config file"\n}\n\n(& nuget.exe list -AllVersions -Source $source).Split([Environment]::NewLine) | % {\n  $id = $_.Split(" ")[0].Trim()\n  $version = $_.Split(" ")[1].Trim()\n\n  $path = [IO.Path]::Combine("Packages", $id, $version, "${id}.${version}.nupkg")\n\n  Write-Host "nuget.exe push -Source $destination ""$path"""\n  & nuget.exe push -Source $destination $path\n}\n'})})]})}function l(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},1151:(e,t,r)=>{r.d(t,{Z:()=>a,a:()=>i});var n=r(7294);const s={},o=n.createContext(s);function i(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);