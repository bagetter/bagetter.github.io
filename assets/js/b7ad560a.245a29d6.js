"use strict";(self.webpackChunkba_getter=self.webpackChunkba_getter||[]).push([[506],{6968:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var t=o(5893),s=o(1151);const l={},r="Run BaGetter on Google Cloud Platform",i={id:"Installation/gcp",title:"Run BaGetter on Google Cloud Platform",description:"!!! warning",source:"@site/docs/Installation/gcp.md",sourceDirName:"Installation",slug:"/Installation/gcp",permalink:"/docs/Installation/gcp",draft:!1,unlisted:!1,editUrl:"https://github.com/bagetter/bagetter.github.io/tree/main/docs/Installation/gcp.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Run BaGetter on Docker",permalink:"/docs/Installation/docker"},next:{title:"Windows IIS Proxy",permalink:"/docs/Installation/iis-proxy"}},a={},c=[{value:"Google Cloud Storage",id:"google-cloud-storage",level:2},{value:"Setup",id:"setup",level:3},{value:"Configuration",id:"configuration",level:3},{value:"Google Cloud SQL",id:"google-cloud-sql",level:2},{value:"Google AppEngine",id:"google-appengine",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"run-bagetter-on-google-cloud-platform",children:"Run BaGetter on Google Cloud Platform"}),"\n",(0,t.jsx)(n.p,{children:"!!! warning\nThis page is a work in progress!"}),"\n",(0,t.jsxs)(n.p,{children:["We're open source and accept contributions!\n",(0,t.jsx)(n.a,{href:"https://github.com/bagetter/BaGetter",children:"Fork us on GitHub"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Before you begin, you should decide which ",(0,t.jsx)(n.a,{href:"https://cloud.google.com/appengine/docs/locations",children:"AppEngine region"}),"\nyou will use. For best performance, Cloud Storage and Cloud SQL should be located\nin the same region as your AppEngine deployment."]}),"\n",(0,t.jsx)(n.h2,{id:"google-cloud-storage",children:"Google Cloud Storage"}),"\n",(0,t.jsxs)(n.p,{children:["Packages can be stored in ",(0,t.jsx)(n.a,{href:"https://cloud.google.com/storage/",children:"Google Cloud Storage"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"setup",children:"Setup"}),"\n",(0,t.jsxs)(n.p,{children:["Follow the instructions in ",(0,t.jsx)(n.a,{href:"https://cloud.google.com/appengine/docs/flexible/dotnet/using-cloud-storage",children:"Using Cloud Storage"})," to create a bucket."]}),"\n",(0,t.jsx)(n.h3,{id:"configuration",children:"Configuration"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"NOTE:"})," If you plan to use AppEngine, skip this part and follow the AppEngine instructions below."]}),"\n",(0,t.jsxs)(n.p,{children:["Set up a service account and download credentials. Set the ",(0,t.jsx)(n.code,{children:"GOOGLE_APPLICATION_CREDENTIALS"})," environment variable to the path to the JSON file you downloaded."]}),"\n",(0,t.jsxs)(n.p,{children:["Configure BaGetter to use Google Cloud Storage by updating the ",(0,t.jsx)(n.code,{children:"appsettings.json"})," file:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n    ...\n\n    "Storage": {\n        "Type": "GoogleCloud",\n        "BucketName": "your-gcs-bucket"\n    },\n\n    ...\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"google-cloud-sql",children:"Google Cloud SQL"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Follow the instructions in ",(0,t.jsx)(n.a,{href:"https://cloud.google.com/appengine/docs/flexible/dotnet/using-cloud-sql",children:"Using Cloud SQL"})," to create a 2nd Gen MySQL 5.7 Google Cloud SQL instance. The default options should work well."]}),"\n",(0,t.jsxs)(n.li,{children:["Create a database named ",(0,t.jsx)(n.code,{children:"bagetter"}),". This can be done through the Google Cloud Console. Use ",(0,t.jsx)(n.code,{children:"utf8mb4"})," as the Character set."]}),"\n",(0,t.jsxs)(n.li,{children:["Follow ",(0,t.jsx)(n.a,{href:"https://cloud.google.com/sql/docs/mysql/configure-ssl-instance#new-client",children:"Configuring SSL/TLS"})," to create a client certificate. Download the three files it creates."]}),"\n",(0,t.jsxs)(n.li,{children:["Convert the PEM to a PFX by running ",(0,t.jsx)(n.code,{children:"openssl pkcs12 -inkey client-key.pem -in client-cert.pem -export -out client.pfx"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["One way to obtain OpenSSL on Windows is to install ",(0,t.jsx)(n.a,{href:"https://gitforwindows.org/",children:"Git Bash"}),"."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Configure BaGetter to use Google Cloud SQL by updating the ",(0,t.jsx)(n.a,{href:"https://github.com/bagetter/BaGetter/blob/master/src/BaGetter/appsettings.json",children:(0,t.jsx)(n.code,{children:"appsettings.json"})})," file:"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n    ...\n    "Database": {\n        "Type": "MySql",\n        "ConnectionString": "Server=YOURIP;User Id=root;Password=***;Database=bagetter;CertificateFile=C:\\\\Path\\\\To\\\\client.pfx;CACertificateFile=C:\\\\Path\\\\To\\\\server-ca.pem;SSL Mode=VerifyCA"\n    },\n    ...\n}\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Create the tables by running ",(0,t.jsx)(n.code,{children:"dotnet ef database update --context MySqlContext --project src\\BaGetter"})]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"google-appengine",children:"Google AppEngine"}),"\n",(0,t.jsxs)(n.p,{children:["BaGetter can be hosted in Google AppEngine. See ",(0,t.jsx)(n.a,{href:"https://cloud.google.com/appengine/docs/flexible/dotnet/quickstart",children:"here"}),"\nfor a tutorial on how to create a new AppEngine project."]}),"\n",(0,t.jsxs)(n.p,{children:["Create a ",(0,t.jsx)(n.code,{children:"app.yaml"})," file to publish the Docker container built by the Dockerfile in this repo. In the template\nbelow, make the following replacements:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"PROJECT"})," - your GCP project, as returned by ",(0,t.jsx)(n.code,{children:"gcloud config get-value project"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"REGION"})," -- the GCP region your Google Cloud SQL database is in, e.g., ",(0,t.jsx)(n.code,{children:"us-central1"})," or ",(0,t.jsx)(n.code,{children:"us-west2"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"DBINSTANCE"})," -- the name of your Google Cloud SQL database instance"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"DBNAME"})," -- the name of the BaGetter database on that instance (e.g., ",(0,t.jsx)(n.code,{children:"bagetter"})," in the instructions above)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"PASSWORD"})," -- the password for the database root user"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"BUCKETNAME"})," -- the name of the Google Cloud Storage Bucket configured above"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'runtime: custom\nenv: flex\n\n# The settings below are to reduce costs during testing and are not necessarily\n# appropriate for production use. For more information, see:\n# https://cloud.google.com/appengine/docs/flexible/dotnet/configuring-your-app-with-app-yaml\nresources:\n  cpu: 1\n  memory_gb: 0.5\n  disk_size_gb: 10\n\nbeta_settings:\n  cloud_sql_instances: "PROJECT:REGION:DBINSTANCE"\n\nenv_variables:\n  Database__Type: "MySql"\n  Database__ConnectionString: "Server=/cloudsql/PROJECT:REGION:DBINSTANCE;User Id=root;Password=PASSWORD;Database=DBNAME;SslMode=None"\n  Storage__Type: "GoogleCloud"\n  Storage__BucketName: "BUCKETNAME"\n  Search__Type: "Database"\n  ASPNETCORE_URLS: "http://0.0.0.0:8080"\n'})}),"\n",(0,t.jsxs)(n.p,{children:["To publish the application, run ",(0,t.jsx)(n.code,{children:"gcloud app deploy"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},1151:(e,n,o)=>{o.d(n,{Z:()=>i,a:()=>r});var t=o(7294);const s={},l=t.createContext(s);function r(e){const n=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);