"use strict";(self.webpackChunkba_getter=self.webpackChunkba_getter||[]).push([[796],{928:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var r=t(5893),o=t(1151);const s={},a="Run BaGetter on Docker",i={id:"Installation/docker",title:"Run BaGetter on Docker",description:"Configure BaGetter (optional)",source:"@site/docs/Installation/docker.md",sourceDirName:"Installation",slug:"/Installation/docker",permalink:"/docs/Installation/docker",draft:!1,unlisted:!1,editUrl:"https://github.com/bagetter/BaGetter/tree/main/docs/docs/Installation/docker.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Run BaGetter on Azure",permalink:"/docs/Installation/azure"},next:{title:"Run BaGetter on Google Cloud Platform",permalink:"/docs/Installation/gcp"}},l={},c=[{value:"Configure BaGetter (optional)",id:"configure-bagetter-optional",level:2},{value:"Run BaGetter",id:"run-bagetter",level:2},{value:"Publish packages",id:"publish-packages",level:2},{value:"Browse packages",id:"browse-packages",level:2},{value:"Restore packages",id:"restore-packages",level:2},{value:"Symbol server",id:"symbol-server",level:2},{value:"Running BaGetter behind a reverse proxy",id:"running-bagetter-behind-a-reverse-proxy",level:2},{value:"Apache 2 Configuration",id:"apache-2-configuration",level:3}];function d(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,o.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"run-bagetter-on-docker",children:"Run BaGetter on Docker"}),"\n",(0,r.jsx)(n.h2,{id:"configure-bagetter-optional",children:"Configure BaGetter (optional)"}),"\n",(0,r.jsxs)(n.p,{children:["Create a file named ",(0,r.jsx)(n.code,{children:"bagetter.env"})," to store BaGetter's configurations:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"# The following config is the API Key used to publish packages.\n# You should change this to a secret value to secure your server.\nApiKey=NUGET-SERVER-API-KEY\n\nStorage__Type=FileSystem\nStorage__Path=/data\nDatabase__Type=Sqlite\nDatabase__ConnectionString=Data Source=/data/db/bagetter.db\nSearch__Type=Database\n"})}),"\n",(0,r.jsxs)(n.p,{children:["For a full list of configurations, please refer to ",(0,r.jsx)(n.a,{href:"/docs/configuration",children:"BaGetter's configuration"})," guide."]}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"bagetter.env"})," file stores ",(0,r.jsx)(n.a,{href:"../configuration",children:"BaGetter's configuration"})," as environment variables.\nAlternatively, the configuration can be injected via environment variables directly, e.g. the ",(0,r.jsx)(n.code,{children:"environment"})," array in a docker compose file or the ",(0,r.jsx)(n.code,{children:"--env"})," flag in a ",(0,r.jsx)(n.code,{children:"docker run"})," command.\nTo learn how these configurations work, please refer to ",(0,r.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/aspnet/core/fundamentals/configuration/?view=aspnetcore-2.1&tabs=basicconfiguration#configuration-by-environment",children:"ASP.NET Core's configuration documentation"}),"."]})}),"\n",(0,r.jsxs)(n.p,{children:["If this step is omitted the default mode (unconfigured) will be Sqlite with the sql blobs stored in the path ",(0,r.jsx)(n.code,{children:"/data/db/bagetter.db"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"run-bagetter",children:"Run BaGetter"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Create a folder named ",(0,r.jsx)(n.code,{children:"bagetter-data"})," in the same directory as the ",(0,r.jsx)(n.code,{children:"bagetter.env"})," file. This will be used by BaGetter to persist its state."]}),"\n",(0,r.jsxs)(n.li,{children:["Pull BaGetter's latest ",(0,r.jsx)(n.a,{href:"https://hub.docker.com/r/bagetter/bagetter",children:"docker image"}),":"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"docker pull bagetter/bagetter\n"})}),"\n",(0,r.jsx)(n.p,{children:"You can now run BaGetter..."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["...with optional ",(0,r.jsx)(n.code,{children:".env"})," file:"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:'docker run --rm --name nuget-server -p 5000:8080 --env-file bagetter.env -v "$(pwd)/bagetter-data:/data" bagetter/bagetter:latest\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"...or without:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:'docker run --rm --name nuget-server -p 5000:8080 -v "$(pwd)/bagetter-data:/data" bagetter/bagetter:latest\n'})}),"\n",(0,r.jsx)(n.h2,{id:"publish-packages",children:"Publish packages"}),"\n",(0,r.jsx)(n.p,{children:"Publish your first package with:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"dotnet nuget push -s http://localhost:5000/v3/index.json -k NUGET-SERVER-API-KEY package.1.0.0.nupkg\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Publish your first ",(0,r.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/nuget/create-packages/symbol-packages-snupkg",children:"symbol package"})," with:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"dotnet nuget push -s http://localhost:5000/v3/index.json -k NUGET-SERVER-API-KEY symbol.package.1.0.0.snupkg\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"warning",children:(0,r.jsxs)(n.p,{children:["The default API Key to publish packages is ",(0,r.jsx)(n.code,{children:"NUGET-SERVER-API-KEY"}),".\nYou should change this to a secret value to secure your server. See ",(0,r.jsx)(n.a,{href:"#configure-bagetter-optional",children:"Configure BaGetter"}),"."]})}),"\n",(0,r.jsx)(n.h2,{id:"browse-packages",children:"Browse packages"}),"\n",(0,r.jsxs)(n.p,{children:["You can browse packages by opening the URL ",(0,r.jsx)(n.a,{href:"http://localhost:5000/",children:(0,r.jsx)(n.code,{children:"http://localhost:5000/"})})," in your browser."]}),"\n",(0,r.jsx)(n.h2,{id:"restore-packages",children:"Restore packages"}),"\n",(0,r.jsx)(n.p,{children:"You can restore packages by using the following package source:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"http://localhost:5000/v3/index.json"})}),"\n",(0,r.jsx)(n.p,{children:"Some helpful guides:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/nuget/consume-packages/install-use-packages-visual-studio#package-sources",children:"Visual Studio"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/nuget/reference/nuget-config-file#package-source-sections",children:"NuGet.config"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"symbol-server",children:"Symbol server"}),"\n",(0,r.jsx)(n.p,{children:"You can load symbols by using the following symbol location:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"http://localhost:5000/api/download/symbols"})}),"\n",(0,r.jsxs)(n.p,{children:["For Visual Studio, please refer to the ",(0,r.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/visualstudio/debugger/specify-symbol-dot-pdb-and-source-files-in-the-visual-studio-debugger?view=vs-2017#configure-symbol-locations-and-loading-options",children:"Configure Debugging"})," guide."]}),"\n",(0,r.jsx)(n.h2,{id:"running-bagetter-behind-a-reverse-proxy",children:"Running BaGetter behind a reverse proxy"}),"\n",(0,r.jsxs)(n.p,{children:["BaGetter can be run behind a reverse proxy in order to provide HTTPS, your own domain, and other features. For the API to deliver proper URLs, the proxy needs to forward the ",(0,r.jsx)(n.code,{children:"X-Forwarded-Host"})," header, or the ",(0,r.jsx)(n.code,{children:"Host"})," header iteslf.",(0,r.jsx)(n.br,{}),"\n","For more information, please refer to the ",(0,r.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/aspnet/core/host-and-deploy/proxy-load-balancer",children:"ASP.NET Core documentation"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Consider binding port 5000 to localhost only using -p 127.0.0.1:5000:8080 to avoid any transmission of non encrypted data even over internal networks"}),"\n",(0,r.jsx)(n.h3,{id:"apache-2-configuration",children:"Apache 2 Configuration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-config",children:'<IfModule mod_ssl.c>\n\t<VirtualHost *:443>\n\n\t\tServerName nuget.example.com\n\n\t\tProxyRequests Off\n\t\tProxyPreserveHost On\n\t\tProxyPass / http://localhost:5000/\n\t\tProxyPassReverse / http://localhost:5000/\n\t\tRequestHeader set X-Forwarded-Proto https\n\n\t\tSSLCertificateFile /etc/letsencrypt/live/nuget.example.com/fullchain.pem #managed by cerbot\n\t\tSSLCertificateKeyFile /etc/letsencrypt/live/nuget.example.com/privkey.pem #managed by cerbot\n\t\tInclude /etc/letsencrypt/options-ssl-apache.conf\n\t\tHeader always set Strict-Transport-Security "max-age=31536000"\n\t\tHeader always set Content-Security-Policy upgrade-insecure-requests\n\t</VirtualHost>\n</IfModule>\n'})})]})}function h(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>i,a:()=>a});var r=t(7294);const o={},s=r.createContext(o);function a(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);